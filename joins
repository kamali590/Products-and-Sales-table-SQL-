Joins 
1. Employees Table
CREATE TABLE Employees (
    emp_id INT PRIMARY KEY,
    name VARCHAR(50),
    department_id INT,
    salary INT
);

INSERT INTO Employees (emp_id, name, department_id, salary) VALUES
(1, 'Alice', 101, 60000),
(2, 'Bob', 102, 55000),
(3, 'Charlie', 101, 70000),
(4, 'David', 103, 48000),
(5, 'Eve', NULL, 75000),
(6, 'Frank', 104, 52000),
(7, 'Grace', 102, 58000),
(8, 'Hannah', NULL, 62000);
________________________________________
🧱 2. Departments Table
CREATE TABLE Departments (
    department_id INT PRIMARY KEY,
    department_name VARCHAR(50),
    location VARCHAR(50)
);

INSERT INTO Departments (department_id, department_name, location) VALUES
(101, 'HR', 'New York'),
(102, 'IT', 'San Francisco'),
(103, 'Finance', 'Chicago'),
(104, 'Sales', 'Boston'),
(105, 'Marketing', 'Los Angeles');
________________________________________
🔍 20 Hands-on SQL JOIN Questions
________________________________________
🔹 INNER JOIN
1.	List all employees along with their department names.
ANS: mysql> select employees.name,departments.department_name from employees inner join departments on employees. department_id = departments.department_id;
+---------+-----------------+
| name    | department_name |
+---------+-----------------+
| Alice   | HR              |
| Bob     | IT              |
| Charlie | HR              |
| David   | Finance         |
| Frank   | Sales           |
| Grace   | IT              |
+---------+-----------------+
2.	Show the names of employees who work in the IT department.
ANS: mysql> select employees.name,departments.department_name from employees inner join departments
    -> on employees.department_id = departments.department_id
    -> where departments.department_name='IT';
+-------+-----------------+
| name  | department_name |
+-------+-----------------+
| Bob   | IT              |
| Grace | IT              |
+-------+-----------------+
3.	Get the names and locations of departments where at least one employee works.
ANS: mysql> select employees.name,departments.location from employees inner join departments
    -> on employees.department_id=departments.department_id
    -> where departments.location is not null;
+---------+---------------+
| name    | location      |
+---------+---------------+
| Alice   | New York      |
| Bob     | San Francisco |
| Charlie | New York      |
| David   | Chicago       |
| Frank   | Boston        |
| Grace   | San Francisco |
+---------+---------------+
4.	Find employees who work in the same location as the 'HR' department.
ANS: mysql> select employees.name,departments.location from employees inner join departments
    -> on employees.department_id=departments.department_id
    -> where departments.department_name='hr';
+---------+----------+
| name    | location |
+---------+----------+
| Alice   | New York |
| Charlie | New York |
+---------+----------+
5.	List department names and employee count (only departments with employees).
ANS: mysql> select count(employees.name),departments.department_name from employees inner join departments
    -> on employees.department_id=departments.department_id
    -> group by departments.department_name having count(employees.name);
+-----------------------+-----------------+
| count(employees.name) | department_name |
+-----------------------+-----------------+
|                     2 | HR              |
|                     2 | IT              |
|                     1 | Finance         |
|                     1 | Sales           |
+-----------------------+-----------------+
________________________________________
🔹 LEFT JOIN
6.	List all employees and their departments (even if they don’t belong to any department).
ANS: mysql> select employees.name,departments.department_name from employees left join departments
    -> on employees.department_id=departments.department_id
    -> ;
+---------+-----------------+
| name    | department_name |
+---------+-----------------+
| Alice   | HR              |
| Bob     | IT              |
| Charlie | HR              |
| David   | Finance         |
| Eve     | NULL            |
| Frank   | Sales           |
| Grace   | IT              |
| Hannah  | NULL            |
+---------+-----------------+
7.	Find employees who are not assigned to any department.
ANS: mysql> select employees.name,departments.department_name from employees left join departments
    -> on employees.department_id=departments.department_id
    -> where employees.department_id is null;
+--------+-----------------+
| name   | department_name |
+--------+-----------------+
| Eve    | NULL            |
| Hannah | NULL            |
+--------+-----------------+
8.	List all departments and the names of employees working in them (include departments without employees).
mysql> select employees.name,departments.department_name from departments left join employees
                   -> on employees.department_id=departments.department_id
    -> ;
+---------+-----------------+
| name    | department_name |
+---------+-----------------+
| Charlie | HR              |
| Alice   | HR              |
| Grace   | IT              |
| Bob     | IT              |
| David   | Finance         |
              | Frank   | Sales           |
| NULL    | Marketing       |
+---------+-----------------+
9.	Show employee names and department names, replacing NULLs with 'Unassigned'.
ans: mysql> select
    ->     employees.name,
    ->     case
    ->         when departments.department_id is null then 'unassigned'
    ->         else departments.department_name
    ->     end as department_name
    -> from employees
    -> left join departments
    ->     on employees.department_id = departments.department_id;
+---------+-----------------+
| name    | department_name |
+---------+-----------------+
| alice   | hr              |
| bob     | it              |
| charlie | hr              |
| david   | finance         |
| eve     | unassigned      |
| frank   | sales           |
| grace   | it              |
| hannah  | unassigned      |
+---------+-----------------+
10.	Find departments where no employees are assigned.
ANS: mysql> select employees.name from employees left join departments
    -> on employees.department_id = departments.department_id
    -> where departments.department_id is null;
+--------+
| name   |
+--------+
| Eve    |
| Hannah |
+--------+
________________________________________
🔹 RIGHT JOIN (use LEFT JOIN with reversed tables if using SQLite/MySQL)
11.	Show all departments and the employees working in them (even if no employees).
(Use RIGHT JOIN or flip the LEFT JOIN if not supported)
mysql> select departments.department_name, employees.name from employees right join departments
    -> on employees. department_id = departments.department_id;
+-----------------+---------+
| department_name | name    |
+-----------------+---------+
| HR              | Charlie |
| HR              | Alice   |
| IT              | Grace   |
| IT              | Bob     |
| Finance         | David   |
| Sales           | Frank   |
| Marketing       | NULL    |
	
12.	List all employees and their department locations.
ANS: mysql> select employees.name,departments.department_name,departments.location from employees right join departments
    -> on employees. department_id = departments.department_id
    -> ;
+---------+-----------------+---------------+
| name    | department_name | location      |
+---------+-----------------+---------------+
| Charlie | HR              | New York      |
| Alice   | HR              | New York      |
| Grace   | IT              | San Francisco |
| Bob     | IT              | San Francisco |
| David   | Finance         | Chicago       |
| Frank   | Sales           | Boston        |
| NULL    | Marketing       | Los Angeles   |
+---------+-----------------+---------------+
